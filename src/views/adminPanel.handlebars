<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Lista de Usuarios</title>
    <style>
      body { font-family: 'Arial', sans-serif; margin: 20px; } h1 { color: #333;
      } table { width: 100%; border-collapse: collapse; margin-top: 20px; } th,
      td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; } th
      { background-color: #f2f2f2; } tr:hover { background-color: #f5f5f5; }
      .btn-editar, .btn-eliminar { display: inline-block; padding: 8px 12px;
      margin: 4px; text-decoration: none; color: #fff; background-color:
      #007bff; border-radius: 4px; transition: background-color 0.3s; }
      .btn-eliminar { background-color: #dc3545; } .btn-editar:hover,
      .btn-eliminar:hover { background-color: #0056b3; } #popupCrearUsuario,
      #popupEditarUsuario { display: none; position: fixed; top: 50%; left: 50%;
      transform: translate(-50%, -50%); background-color: #fff; padding: 20px;
      border: 1px solid #ddd; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); z-index:
      999; } #popupCrearUsuario h2, #popupEditarUsuario h2 { margin-bottom:
      10px; color: #333; } #formCrearUsuario, #formEditarUsuario { display:
      flex; flex-direction: column; } #formCrearUsuario label,
      #formEditarUsuario label { margin-bottom: 6px; } #formCrearUsuario input,
      #formCrearUsuario button, #formEditarUsuario input, #formEditarUsuario
      button { margin-bottom: 12px; padding: 8px; } #formCrearUsuario button,
      #formEditarUsuario button { background-color: #28a745; color: #fff;
      border: none; border-radius: 4px; cursor: pointer; } #formCrearUsuario
      button:hover, #formEditarUsuario button:hover { background-color: #218838;
      } #btnCrearUsuario, #btnEditarUsuario { display: inline-block; padding:
      8px 24px; /* Modificado para hacer el botón el doble de grande */
      margin-bottom: 10px; text-decoration: none; color: #fff; background-color:
      #218838; /* Color distinto */ border-radius: 4px; cursor: pointer;
      transition: background-color 0.3s; } #btnCrearUsuario:hover,
      #btnEditarUsuario:hover { background-color: #1e7e34; /* Cambio de color al
      hacer hover */ } #btnCrearProducto { display: inline-block; padding: 8px
      24px; /* Doble de grande */ margin-bottom: 10px; text-decoration: none;
      color: #fff; background-color: #007bff; /* Color diferente */
      border-radius: 4px; cursor: pointer; transition: background-color 0.3s; }
      #btnCrearProducto:hover { background-color: #0056b3; }
    </style>
  </head>
  <body>
    <h1>Lista de Usuarios</h1>
    <button id="btnCrearUsuario">Crear Usuario</button>
    <button id="btnCrearProducto"><a
        href="http://localhost:8080/api/views/newproduct"
        style="color: #fff; text-decoration: none;"
      >Crear un nuevo producto</a></button>
    <table>
      <thead>
        <tr>
          <th>ID</th>
          <th>Nombre</th>
          <th>Acciones</th>
        </tr>
      </thead>
      <tbody>
        {{#each user}}
          <tr>
            <td>{{_id}}</td>
            <td>{{username}}</td>
            <td>
              <a href="#" class="btn-editar" data-id="{{_id}}">Editar</a>
              <a href="#" class="btn-eliminar" data-id="{{_id}}">Eliminar</a>
            </td>
          </tr>
        {{/each}}
      </tbody>
    </table>

    <div id="popupCrearUsuario">
      <h2>Crear Nuevo Usuario</h2>
      <form id="formCrearUsuario">
        <label for="username">Nombre de Usuario:</label>
        <input type="text" id="username" name="username" required />

        <label for="email">Correo Electrónico:</label>
        <input type="email" id="email" name="email" required />

        <label for="password">Contraseña:</label>
        <input type="password" id="password" name="password" required />

        <label for="age">Edad:</label>
        <input type="number" id="age" name="age" required />

        <label for="roles">Roles (separados por comas):</label>
        <input type="text" id="roles" name="roles" />

        <button type="submit" id="btnEnviarUsuario">Crear Usuario</button>
      </form>
    </div>

    <div id="popupEditarUsuario">
      <h2>Editar Usuario</h2>
      <form id="formEditarUsuario">
        <label for="editUsername">Nombre de Usuario:</label>
        <input type="text" id="editUsername" name="editUsername" required />

        <label for="editEmail">Correo Electrónico:</label>
        <input type="email" id="editEmail" name="editEmail" required />

        <label for="editPassword">Contraseña:</label>
        <input type="password" id="editPassword" name="editPassword" required />

        <label for="editAge">Edad:</label>
        <input type="number" id="editAge" name="editAge" required />

        <button type="submit" id="btnEditarUsuario">Guardar Cambios</button>
      </form>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function () { const
      btnCrearUsuario = document.getElementById('btnCrearUsuario'); const
      popupCrearUsuario = document.getElementById('popupCrearUsuario'); const
      formCrearUsuario = document.getElementById('formCrearUsuario'); const
      btnEnviarUsuario = document.getElementById('btnEnviarUsuario'); const
      btnEliminarUsuario = document.querySelectorAll('.btn-eliminar');
      btnCrearUsuario.addEventListener('click', function () {
      popupCrearUsuario.style.display = 'block'; });
      btnEnviarUsuario.addEventListener('click', function (event) {
      event.preventDefault(); const formData = new FormData(formCrearUsuario);
      const userData = {}; formData.forEach((value, key) => { userData[key] =
      value; }); fetch('/api/users/usuarios', { method: 'POST', headers: {
      'Content-Type': 'application/json', }, body: JSON.stringify(userData), })
      .then(response => response.json()) .then(data => {
      popupCrearUsuario.style.display = 'none'; alert('Usuario creado
      exitosamente'); window.location.reload(); }) .catch(error =>
      console.error('Error al crear usuario:', error)); });
      btnEliminarUsuario.forEach(btn => { btn.addEventListener('click', function
      (event) { event.preventDefault(); const userId =
      btn.getAttribute('data-id'); fetch(`/api/users/usuarios/${userId}`, {
      method: 'DELETE', }) .then(response => response.json()) .then(data => {
      alert('Usuario eliminado exitosamente'); window.location.reload(); })
      .catch(error => console.error('Error al eliminar usuario:', error)); });
      }); const btnEditarUsuario = document.querySelectorAll('.btn-editar');
      const popupEditarUsuario = document.getElementById('popupEditarUsuario');
      const formEditarUsuario = document.getElementById('formEditarUsuario');
      const btnGuardarCambios = document.getElementById('btnEditarUsuario');
      btnEditarUsuario.forEach(btn => { btn.addEventListener('click', function
      (event) { event.preventDefault(); const userId =
      btn.getAttribute('data-id'); popupEditarUsuario.style.display = 'block';
      }); }); btnGuardarCambios.addEventListener('click', function (event) {
      event.preventDefault(); popupEditarUsuario.style.display = 'none';
      alert('Cambios guardados exitosamente'); window.location.reload(); }); });
    </script>
  </body>
</html>