<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat</title>

  </head>
  <body>
    <h1>Chat en tiempo real</h1>
    <div id="chat-container">
      <div id="messages">
        {{#each messages}}
          <p><strong>{{this.user}}:</strong> {{this.message}}</p>
        {{/each}}
      </div>
      <div id="message-form">
        <input type="text" id="user" placeholder="Tu nombre" />
        <input type="text" id="message" placeholder="Escribe un mensaje" />
        <button id="send">Enviar</button>
      </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      // Crear una instancia de Socket.io y conectar al servidor const socket =
      io(); // Seleccionar elementos del DOM const userField =
      document.getElementById('user'); const messageField =
      document.getElementById('message'); const sendButton =
      document.getElementById('send'); const messagesContainer =
      document.getElementById('messages'); // Manejar el evento de clic en el
      botón de enviar sendButton.addEventListener('click', () => { const user =
      userField.value; const message = messageField.value; // Enviar el mensaje
      al servidor a través de socket socket.emit('chatMessage', { user, message
      }); // Limpiar el campo de mensaje messageField.value = ''; }); //
      Escuchar eventos de mensajes desde el servidor socket.on('chatMessage',
      (data) => { // Agregar el mensaje recibido al contenedor de mensajes const
      messageElement = document.createElement('p'); messageElement.innerHTML =
      `<strong>${data.user}:</strong> ${data.message}`;
      messagesContainer.appendChild(messageElement); });
    </script>

  </body>
</html>